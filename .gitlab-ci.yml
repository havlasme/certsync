stages:
- test
- build
- release
- publish

shellcheck:
  image: debian:latest
  stage: test
  rules:
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  before_script:
  - 'which make || ( apt-get update -y && apt-get install build-essential -y )'
  - 'which fakeroot || ( apt-get update -y && apt-get install fakeroot -y )'
  - 'which envsubst || ( apt-get update -y && apt-get install gettext-base -y )'
  - 'which shellcheck || ( apt-get update -y && apt-get install shellcheck -y )'
  script:
  - 'make shellcheck'

release:
  image: debian:latest
  stage: release
  rules:
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_MESSAGE =~ /\[ci release\]/'
  needs:
  - job: push debian 10 package to registry
  - job: push debian 11 package to registry
  - job: push ubuntu 18.04 package to registry
  - job: push ubuntu 20.04 package to registry
  before_script:
  - 'which make || ( apt-get update -y && apt-get install build-essential -y )'
  - 'which fakeroot || ( apt-get update -y && apt-get install fakeroot -y )'
  - 'which envsubst || ( apt-get update -y && apt-get install gettext-base -y )'
  - 'which curl || ( apt-get update -y && apt-get install curl -y )'
  - 'curl --location --output /usr/local/bin/release-cli "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-linux-amd64"'
  - 'chmod +x /usr/local/bin/release-cli'
  script:
  - 'TAG="$(make version)"'
  - |
    release-cli create --name "v${TAG}" --description "v${TAG}" --tag-name "v${TAG}" --ref "$CI_COMMIT_SHA" \
    --assets-link "{\"name\":\"certsync-${TAG}~buster_all.deb\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/debian-10/${TAG}/certsync-${TAG}_all.deb\"}" \
    --assets-link "{\"name\":\"certsync-${TAG}~bullseye_all.deb\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/debian-11/${TAG}/certsync-${TAG}_all.deb\"}" \
    --assets-link "{\"name\":\"certsync-${TAG}~bionic_all.deb\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ubuntu-18.04/${TAG}/certsync-${TAG}_all.deb\"}" \
    --assets-link "{\"name\":\"certsync-${TAG}~focal_all.deb\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ubuntu-20.04/${TAG}/certsync-${TAG}_all.deb\"}"

publish to apt repository:
  image: debian:latest
  stage: publish
  rules:
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    when: manual
  before_script:
  - 'which make || ( apt-get update -y && apt-get install build-essential -y )'
  - 'which fakeroot || ( apt-get update -y && apt-get install fakeroot -y )'
  - 'which envsubst || ( apt-get update -y && apt-get install gettext-base -y )'
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - 'which git || ( apt-get update -y && apt-get install git -y )'
  - 'which gpg || ( apt-get update -y && apt-get install gpg -y )'
  - 'which apt-ftparchive || ( apt-get update -y && apt-get install apt-utils -y )'
  - 'mkdir -p ~/.ssh'
  - 'ssh-keyscan gitlab.com >> ~/.ssh/known_hosts'
  - eval $(ssh-agent -s)
  - echo "${DEPLOYKEY}" | tr -d '\r' | ssh-add -
  - 'mkdir -p -m 0700 ~/.gnupg'
  - 'echo "cert-digest-algo SHA512" >> ~/.gnupg/gpg.conf'
  - 'echo "digest-algo SHA512" >> ~/.gnupg/gpg.conf'
  - echo "${SIGNKEY}" | tr -d '\r' | gpg --import
  script:
  - 'git clone -b repo-apt git@gitlab.com:havlas.me/certsync.git repo'
  - 'cp build/*~buster_*.deb repo/public/debian/pool/main/buster/'
  - 'cp build/*~bullseye_*.deb repo/public/debian/pool/main/bullseye/'
  - 'cp build/*~bionic_*.deb repo/public/ubuntu/pool/main/bionic/'
  - 'cp build/*~focal_*.deb repo/public/ubuntu/pool/main/focal/'
  - 'TAG="$(make version)"'
  - 'cd repo'
  - 'make clean'
  - 'make rescan'
  - 'git config user.name "build-bot"'
  - 'git config user.email "build-bot@havlas.me"'
  - 'git add public'
  - 'git commit -m"package version ${TAG} added"'
  - 'git push'
  needs:
  - job: build debian 10 package
    artifacts: true
  - job: build debian 11 package
    artifacts: true
  - job: build ubuntu 18.04 package
    artifacts: true
  - job: build ubuntu 20.04 package
    artifacts: true

include:
- local: .gitlab-ci/debian-10.yml
- local: .gitlab-ci/debian-11.yml
- local: .gitlab-ci/ubuntu-18.04.yml
- local: .gitlab-ci/ubuntu-20.04.yml
